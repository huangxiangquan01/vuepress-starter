import{_ as n,o as s,c as a,a as e}from"./app-999de8cb.js";const t={},p=e(`<h1 id="代理模式" tabindex="-1"><a class="header-anchor" href="#代理模式" aria-hidden="true">#</a> 代理模式</h1><h2 id="一、基本概念" tabindex="-1"><a class="header-anchor" href="#一、基本概念" aria-hidden="true">#</a> 一、基本概念</h2><p>代理模式给某一个对象提供一个代理对象，并由代理对象控制对原对象的引用。通俗的来讲代理模式就是中介。</p><h2 id="二、代理模式的结构" tabindex="-1"><a class="header-anchor" href="#二、代理模式的结构" aria-hidden="true">#</a> 二、代理模式的结构</h2><h2 id="三、代理模式的优缺点" tabindex="-1"><a class="header-anchor" href="#三、代理模式的优缺点" aria-hidden="true">#</a> 三、代理模式的优缺点</h2><h3 id="_1、优点" tabindex="-1"><a class="header-anchor" href="#_1、优点" aria-hidden="true">#</a> 1、优点</h3><pre><code>（1）被代理类可以更加专注于主要功能的实现，在一定程度上降低了系统的耦合度。
还是卖火车票的例子，当火车站的火车票交给代理商去做的时候，他们就可以更加专注于完成其它业务，买票的效率也上去了，还可以提前订票，退票，好处简直太多太多。
（2）代理类可以提供额外的功能。
代理商代理了售卖火车票的事情后，顾客可以抢票了，在火车站你怎么抢？还可以预定座位，我记得火车站买票好像不能订座。。。
（3）代理对象可以在客户端和目标对象之间起到中介的作用，这样起到了保护目标对象的作用。
</code></pre><h3 id="_2、缺点" tabindex="-1"><a class="header-anchor" href="#_2、缺点" aria-hidden="true">#</a> 2、缺点</h3><pre><code>（1）由于客户端和对象之间增加了代理对象，因此有些类型的代理模式可能会造成请求处理速度变慢；
（2）实现代理模式需要额外的工作，有些代理模式的实现非常复杂；
</code></pre><h2 id="四、代理模式的使用场景" tabindex="-1"><a class="header-anchor" href="#四、代理模式的使用场景" aria-hidden="true">#</a> 四、代理模式的使用场景</h2><h3 id="_1、虚代理" tabindex="-1"><a class="header-anchor" href="#_1、虚代理" aria-hidden="true">#</a> 1、虚代理</h3><p>根据需要创建开销很大的对象时，只有用到才创建；</p><h3 id="_2、保护代理" tabindex="-1"><a class="header-anchor" href="#_2、保护代理" aria-hidden="true">#</a> 2、保护代理</h3><p>控制对原始对象的访问，比如过滤器；</p><h3 id="_3、智能指引" tabindex="-1"><a class="header-anchor" href="#_3、智能指引" aria-hidden="true">#</a> 3、智能指引</h3><p>在访问对象时附加一些操作，比如对象没有引用时释放资源；</p><h3 id="_4、远程代理" tabindex="-1"><a class="header-anchor" href="#_4、远程代理" aria-hidden="true">#</a> 4、远程代理</h3><p>为一个对象在不同的地址空间提供局部代理；</p><h2 id="五、静态代理" tabindex="-1"><a class="header-anchor" href="#五、静态代理" aria-hidden="true">#</a> 五、静态代理</h2><p>静态代理在使用时，需要定义接口或者父类，被代理对象与代理对象一起实现相同的接口或者继承相同的父</p><h3 id="_1、接口imovie" tabindex="-1"><a class="header-anchor" href="#_1、接口imovie" aria-hidden="true">#</a> 1、接口IMovie</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IMovie</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、实现类movie" tabindex="-1"><a class="header-anchor" href="#_2、实现类movie" aria-hidden="true">#</a> 2、实现类Movie</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Movie</span> <span class="token keyword">implements</span> <span class="token class-name">IMovie</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;您正在观看电影《速度与激情8》&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、代理类movieproxy" tabindex="-1"><a class="header-anchor" href="#_3、代理类movieproxy" aria-hidden="true">#</a> 3、代理类MovieProxy</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">designMode<span class="token punctuation">.</span>advance<span class="token punctuation">.</span>proxy</span><span class="token punctuation">;</span>
 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MovieProxy</span> <span class="token keyword">implements</span> <span class="token class-name">IMovie</span> <span class="token punctuation">{</span>
    <span class="token class-name">Movie</span> movie<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">MovieProxy</span><span class="token punctuation">(</span><span class="token class-name">Movie</span> movie<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>movie <span class="token operator">=</span> movie<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">advertising</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        movie<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">advertising</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">advertising</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> isBeforMovie<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>isBeforMovie<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;影片马上开始,素小暖入驻CSDN啦,快来关注我啊&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;影片正片已经结束,马上彩蛋环节,不要离开哦,素小暖入驻CSDN啦,快来关注我啊&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Movie</span> movie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Movie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">IMovie</span> movieProxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MovieProxy</span><span class="token punctuation">(</span>movie<span class="token punctuation">)</span><span class="token punctuation">;</span>
        movieProxy<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、动态代理" tabindex="-1"><a class="header-anchor" href="#六、动态代理" aria-hidden="true">#</a> 六、动态代理</h2><h3 id="_1、动态代理特点" tabindex="-1"><a class="header-anchor" href="#_1、动态代理特点" aria-hidden="true">#</a> 1、动态代理特点</h3><ul><li>代理对象不需要实现接口，但是目标对象要实现接口；</li><li>代理对象的生成，是利用JDK的API，动态的在内存中构建代理对象；</li><li>动态代理也叫JDK代理或接口代理；</li></ul><h3 id="_2、使用jdk实现动态代理" tabindex="-1"><a class="header-anchor" href="#_2、使用jdk实现动态代理" aria-hidden="true">#</a> 2、使用JDK实现动态代理</h3><p>jdk实现动态代理必须有实现接口InvocationHandler的处理类，用于执行被代理类的方法。</p><h4 id="_1-接口imovie" tabindex="-1"><a class="header-anchor" href="#_1-接口imovie" aria-hidden="true">#</a> (1) 接口IMovie</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IMovie</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token class-name">String</span> movieName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">advertising</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span> isBoforMovie<span class="token punctuation">,</span><span class="token class-name">String</span> txt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-实现类movie" tabindex="-1"><a class="header-anchor" href="#_2-实现类movie" aria-hidden="true">#</a> (2) 实现类Movie</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Movie</span> <span class="token keyword">implements</span> <span class="token class-name">IMovie</span> <span class="token punctuation">{</span>
 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token class-name">String</span> movieName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;您正在观看电影《&quot;</span><span class="token operator">+</span>movieName<span class="token operator">+</span><span class="token string">&quot;》&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">advertising</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span> isBoforMovie<span class="token punctuation">,</span> <span class="token class-name">String</span> txt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>isBoforMovie<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;影片马上开始,&quot;</span><span class="token operator">+</span>txt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;影片正片已经结束,马上彩蛋环节,不要离开哦,&quot;</span><span class="token operator">+</span>txt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-代理类movieproxy" tabindex="-1"><a class="header-anchor" href="#_3-代理类movieproxy" aria-hidden="true">#</a> （3）代理类MovieProxy</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">InvocationHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Proxy</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MovieProxy</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Object</span> target<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">MovieProxy</span><span class="token punctuation">(</span><span class="token class-name">Object</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>target <span class="token operator">=</span> target<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/*
    *
    * public static Object newProxyInstance(ClassLoader loader,
                                          Class&lt;?&gt;[] interfaces,
                                          InvocationHandler h)
    * 1、ClassLoader loader：指定当前目标对象使用的类加载器，获取加载器的方法；
    * 2、Class&lt;?&gt;[] interfaces：目标对象实现的接口类型，使用泛型方式确认类型；
    * 3、InvocationHandler h：事情处理，执行目标对象的方法时，会触发事情处理器方法，会吧当前
    *
    * */</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProxyInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">InvocationHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;JDK代理开始~~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">//反射机制调用目标对象的方法</span>
                        <span class="token class-name">Object</span> ret <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;JDK代理结束~~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-测试类" tabindex="-1"><a class="header-anchor" href="#_4-测试类" aria-hidden="true">#</a> （4）测试类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">IMovie</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Movie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">IMovie</span> proxyInstance <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">IMovie</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">MovieProxy</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProxyInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;proxyInstance=&quot;</span><span class="token operator">+</span>proxyInstance<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        proxyInstance<span class="token punctuation">.</span><span class="token function">advertising</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token string">&quot;素小暖入驻CSDN啦,快来关注我啊&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        proxyInstance<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token string">&quot; 速度与激情8 &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        proxyInstance<span class="token punctuation">.</span><span class="token function">advertising</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token string">&quot;素小暖入驻CSDN啦,快来关注我啊&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、jdk实现动态代理" tabindex="-1"><a class="header-anchor" href="#_3、jdk实现动态代理" aria-hidden="true">#</a> 3、JDK实现动态代理</h3><h2 id="七、cglib代理" tabindex="-1"><a class="header-anchor" href="#七、cglib代理" aria-hidden="true">#</a> 七、cglib代理</h2><p>JDK实现动态代理需要实现类通过接口定义业务方法，对于没有接口的类，如何实现动态代理呢，这就需要CGLib了。CGLib采用了非常底层的字节码技术，其原理是通过字节码技术为一个类创建子类，并在子类中采用方法拦截的技术拦截所有父类方法的调用，顺势织入横切逻辑。但因为采用的是继承，所以不能对final修饰的类进行代理。JDK动态代理与CGLib动态代理均是实现Spring AOP的基础。</p><h2 id="八、几种常见的代理模式介绍" tabindex="-1"><a class="header-anchor" href="#八、几种常见的代理模式介绍" aria-hidden="true">#</a> 八、几种常见的代理模式介绍</h2><h3 id="_1、防火墙代理" tabindex="-1"><a class="header-anchor" href="#_1、防火墙代理" aria-hidden="true">#</a> 1、防火墙代理</h3><p>内网通过代理穿透防火墙，实现对公网的访问。</p><h3 id="_2、缓存代理" tabindex="-1"><a class="header-anchor" href="#_2、缓存代理" aria-hidden="true">#</a> 2、缓存代理</h3><p>当请求图片文件等资源时，先到缓存中去，如果没有再到数据库中取，然后缓存。</p><h3 id="_3、远程代理" tabindex="-1"><a class="header-anchor" href="#_3、远程代理" aria-hidden="true">#</a> 3、远程代理</h3><p>远程对象的本地代表，通过它可以把远程对象当做本地对象来调用。</p><h3 id="_4、同步代理" tabindex="-1"><a class="header-anchor" href="#_4、同步代理" aria-hidden="true">#</a> 4、同步代理</h3><p>主要在多线程编程中使用，完成多线程间的同步工作。</p><h2 id="九、mybatis中的代理模式" tabindex="-1"><a class="header-anchor" href="#九、mybatis中的代理模式" aria-hidden="true">#</a> 九、mybatis中的代理模式</h2>`,52),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","代理模式.html.vue"]]);export{d as default};
