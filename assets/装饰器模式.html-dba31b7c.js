import{_ as n,o as s,c as a,a as t}from"./app-999de8cb.js";const p={},e=t(`<h1 id="装饰器模式" tabindex="-1"><a class="header-anchor" href="#装饰器模式" aria-hidden="true">#</a> 装饰器模式</h1><h2 id="一、基本介绍" tabindex="-1"><a class="header-anchor" href="#一、基本介绍" aria-hidden="true">#</a> 一、基本介绍</h2><p>动态地将责任附加到对象上。若要扩展功能，装饰者提供了比继承更有弹性的替代方案。</p><h2 id="二、装饰器模式的结构" tabindex="-1"><a class="header-anchor" href="#二、装饰器模式的结构" aria-hidden="true">#</a> 二、装饰器模式的结构</h2><h3 id="_1、component-抽象构件" tabindex="-1"><a class="header-anchor" href="#_1、component-抽象构件" aria-hidden="true">#</a> 1、Component，抽象构件</h3><p>Component是一个接口或者抽象类，是定义我们最核心的对象，也可以说是最原始的对象，比如街边小吃；</p><h3 id="_2、concretecomponent-具体构件-或者基础构件" tabindex="-1"><a class="header-anchor" href="#_2、concretecomponent-具体构件-或者基础构件" aria-hidden="true">#</a> 2、ConcreteComponent，具体构件，或者基础构件</h3><p>ConcreteComponent是最核心、最原始、最基本的接口或抽象类Component的实现，可以单独用，也可将其进行装饰，比如街边小吃最有名的手抓饼；</p><h3 id="_3、decorator-装饰角色" tabindex="-1"><a class="header-anchor" href="#_3、decorator-装饰角色" aria-hidden="true">#</a> 3、Decorator，装饰角色</h3><p>一般是一个抽象类，继承自或实现Component，在它的属性里面有一个变量指向Component抽象构件，我觉得这是装饰器最关键的地方。</p><h3 id="_4、concretedecorator-具体装饰角色" tabindex="-1"><a class="header-anchor" href="#_4、concretedecorator-具体装饰角色" aria-hidden="true">#</a> 4、ConcreteDecorator，具体装饰角色</h3><p>ConcreteDecoratorA和ConcreteDecoratorB是两个具体的装饰类，它们可以把基础构件装饰成新的东西，比如把一个普通的手抓饼装饰成加蛋、加肠儿、金针菇的手抓饼。</p><h2 id="三、装饰器模式优缺点" tabindex="-1"><a class="header-anchor" href="#三、装饰器模式优缺点" aria-hidden="true">#</a> 三、装饰器模式优缺点</h2><h3 id="_1、优点" tabindex="-1"><a class="header-anchor" href="#_1、优点" aria-hidden="true">#</a> 1、优点</h3><ul><li><p>装饰类和被装饰类可以独立发展，而不会相互耦合。换句话说，Component类无需知道Decorator类，Decorator类是从外部来扩展Component类的功能，而Decorator也不用知道具体的构件。</p></li><li><p>装饰器模式是继承关系的一个替代方案。我们看装饰类Decorator，不管装饰多少层，返回的对象还是Component(因为Decorator本身就是继承自Component的)，实现的还是is-a的关系。</p></li></ul><h3 id="_2、缺点" tabindex="-1"><a class="header-anchor" href="#_2、缺点" aria-hidden="true">#</a> 2、缺点</h3><ul><li><p>装饰器模式虽然减少了类的爆炸,但是在使用的时候,你就可能需要更多的对象来表示继承关系中的一个对象</p></li><li><p>装饰器模式虽然从数量级上减少了类的数量,但是为了要装饰,仍旧会增加很多的小类这些具体的装饰类的逻辑将不会非常的清晰,不够直观,容易令人迷惑。</p></li><li><p>多层的装饰是比较复杂的。为什么会复杂？你想想看，就像剥洋葱一样，你剥到最后才发现是最里层的装饰出现了问题，可以想象一下工作量。这点从我使用Java I/O的类库就深有感受，我只需要单一结果的流，结果却往往需要创建多个对象，一层套一层，对于初学者来说容易让人迷惑。</p></li></ul><h2 id="四、装饰器模式的使用场景" tabindex="-1"><a class="header-anchor" href="#四、装饰器模式的使用场景" aria-hidden="true">#</a> 四、装饰器模式的使用场景</h2><ol><li>当你想要给一个类增加功能,然而,却并不想修改原来类的代码时,可以考虑装饰器模式如果你想要动态的给一个类增加功能,并且这个功能你还希望可以动态的撤销,就好像直接拿掉了一层装饰物； 2.比如java里面的基本数据类型int、boolean、char....都有它们对应的装饰类Integer、Boolean、Character.... 3、在Java IO中，具体构建角色是节点流、装饰角色是过滤流；</li></ol><p>FilterInputStream和FilterOutputStream是装饰角色，而其他派生自它们的类则是具体装饰角色。</p><p>DataoutputStream out=new DataoutputStream(new FileoutputStream());</p><p>这就是 装饰者模式，DataoutputStream是装饰者子类，FileoutputStream是实现接口的子类。</p><p>这里不会调用到装饰者类--FilteroutputStream,只是作为继承的另一种方案，对客户端来说是透明的，是为了功能的扩张。</p><h2 id="五、装饰器模式实现" tabindex="-1"><a class="header-anchor" href="#五、装饰器模式实现" aria-hidden="true">#</a> 五、装饰器模式实现</h2><h3 id="_1、component-抽象构件-街边小吃" tabindex="-1"><a class="header-anchor" href="#_1、component-抽象构件-街边小吃" aria-hidden="true">#</a> 1、Component，抽象构件：街边小吃</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Getter</span>
    <span class="token annotation punctuation">@Setter</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Snack</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">String</span> des<span class="token punctuation">;</span> <span class="token comment">// 描述</span>
        <span class="token keyword">private</span> <span class="token keyword">float</span> price <span class="token operator">=</span> <span class="token number">0.0f</span><span class="token punctuation">;</span>
     
        <span class="token comment">//计算费用的抽象方法</span>
        <span class="token comment">//子类来实现</span>
        <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">float</span> <span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、-concretecomponent-具体构件-或者基础构件" tabindex="-1"><a class="header-anchor" href="#_2、-concretecomponent-具体构件-或者基础构件" aria-hidden="true">#</a> 2、 ConcreteComponent，具体构件，或者基础构件</h3><p>（1）手抓饼</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HandGrabCake</span> <span class="token keyword">extends</span> <span class="token class-name">Snack</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">HandGrabCake</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">5.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setDes</span><span class="token punctuation">(</span><span class="token string">&quot; 手抓饼 &quot;</span><span class="token operator">+</span> <span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">float</span> <span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）烤冷面</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GrilledColdNoodles</span> <span class="token keyword">extends</span> <span class="token class-name">Snack</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">GrilledColdNoodles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">4.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setDes</span><span class="token punctuation">(</span><span class="token string">&quot; 烤冷面 &quot;</span><span class="token operator">+</span><span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">float</span> <span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(3) Decorator，装饰角色</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Decorator</span> <span class="token keyword">extends</span> <span class="token class-name">Snack</span> <span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token class-name">Snack</span> obj<span class="token punctuation">;</span>
   <span class="token keyword">public</span> <span class="token class-name">Decorator</span><span class="token punctuation">(</span><span class="token class-name">Snack</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//组合</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>obj <span class="token operator">=</span> obj<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token annotation punctuation">@Override</span>
   <span class="token keyword">public</span> <span class="token keyword">float</span> <span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> obj<span class="token punctuation">.</span><span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token annotation punctuation">@Override</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">// obj.getDes() 输出被装饰者的信息</span>
       <span class="token keyword">return</span> des <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &amp;&amp; &quot;</span> <span class="token operator">+</span> obj<span class="token punctuation">.</span><span class="token function">getDes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、具体装饰角色" tabindex="-1"><a class="header-anchor" href="#_3、具体装饰角色" aria-hidden="true">#</a> 3、具体装饰角色</h3><p>（1）鸡蛋</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Egg</span> <span class="token keyword">extends</span> <span class="token class-name">Decorator</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">Egg</span><span class="token punctuation">(</span><span class="token class-name">Snack</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setDes</span><span class="token punctuation">(</span><span class="token string">&quot; 鸡蛋 &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">1.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）烤肠</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Sausage</span> <span class="token keyword">extends</span> <span class="token class-name">Decorator</span>  <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">Sausage</span><span class="token punctuation">(</span><span class="token class-name">Snack</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setDes</span><span class="token punctuation">(</span><span class="token string">&quot; 烤肠 &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">2.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）金针菇</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NeedleMushroom</span> <span class="token keyword">extends</span> <span class="token class-name">Decorator</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">NeedleMushroom</span><span class="token punctuation">(</span><span class="token class-name">Snack</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setDes</span><span class="token punctuation">(</span><span class="token string">&quot; 金针菇 &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">2.5f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、老板-来个手抓饼-加2个蛋、加1根烤肠" tabindex="-1"><a class="header-anchor" href="#_4、老板-来个手抓饼-加2个蛋、加1根烤肠" aria-hidden="true">#</a> 4、老板，来个手抓饼，加2个蛋、加1根烤肠</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">designMode<span class="token punctuation">.</span>advance<span class="token punctuation">.</span>decorator</span><span class="token punctuation">;</span>
 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HandGrabCakeBar</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 装饰者模式下的订单：2个蛋+一根烤肠的手抓饼</span>
        <span class="token comment">// 1. 点一份手抓饼</span>
        <span class="token class-name">Snack</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandGrabCake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;小白手抓饼费用=&quot;</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;描述=&quot;</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">getDes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token comment">// 2. order 加入一个鸡蛋</span>
        order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Egg</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;手抓饼 加入1个鸡蛋 费用 =&quot;</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;手抓饼 加入1个鸡蛋 描述 = &quot;</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">getDes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token comment">// 3. order 加入一个鸡蛋</span>
 
        order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Egg</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;手抓饼 加入1个鸡蛋 加入2个鸡蛋 费用 =&quot;</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;手抓饼 加入1个鸡蛋 加入2个鸡蛋 描述 = &quot;</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">getDes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token comment">// 3. order 加入一根烤肠</span>
 
        order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sausage</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;手抓饼 加入1个鸡蛋 加入2个鸡蛋 加1根烤肠 费用 =&quot;</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;手抓饼 加入1个鸡蛋 加入2个鸡蛋 加1根烤肠 描述 = &quot;</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">getDes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;===========================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token class-name">Snack</span> order2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GrilledColdNoodles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;考冷面 费用 =&quot;</span> <span class="token operator">+</span> order2<span class="token punctuation">.</span><span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;考冷面 描述 = &quot;</span> <span class="token operator">+</span> order2<span class="token punctuation">.</span><span class="token function">getDes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token comment">// 1. order2 加入一袋金针菇</span>
        order2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NeedleMushroom</span><span class="token punctuation">(</span>order2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;考冷面 加入一袋金针菇  费用 =&quot;</span> <span class="token operator">+</span> order2<span class="token punctuation">.</span><span class="token function">cost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;考冷面 加入一袋金针菇 描述 = &quot;</span> <span class="token operator">+</span> order2<span class="token punctuation">.</span><span class="token function">getDes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、装饰器模式在java-i-o系统中的实现" tabindex="-1"><a class="header-anchor" href="#六、装饰器模式在java-i-o系统中的实现" aria-hidden="true">#</a> 六、装饰器模式在Java I/O系统中的实现</h2><p>InputStream作为抽象构件，其下面大约有如下几种具体基础构件，从不同的数据源产生输入：</p><ul><li>ByteArrayInputStream，从字节数组产生输入；</li><li>FileInputStream，从文件产生输入；</li><li>StringBufferInputStream，从String对象产生输入；</li><li>PipedInputStream，从管道产生输入；</li><li>SequenceInputStream，可将其他流收集合并到一个流内；</li></ul><p>FilterInputStream作为装饰器在JDK中是一个普通类，其下面有多个具体装饰器比如BufferedInputStream、DataInputStream等。我们以BufferedInputStream为例，使用它就是避免每次读取时都进行实际的写操作，起着缓冲作用。我们可以在这里稍微深入一下，站在源码的角度来管中窥豹。</p>`,46),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","装饰器模式.html.vue"]]);export{r as default};
