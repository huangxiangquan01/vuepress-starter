import{_ as n,o as s,c as a,a as e}from"./app-999de8cb.js";const t={},i=e(`<h1 id="应用自动弹性伸缩-hpa" tabindex="-1"><a class="header-anchor" href="#应用自动弹性伸缩-hpa" aria-hidden="true">#</a> <strong>应用自动弹性伸缩-HPA</strong></h1><h2 id="_1-hpa-介绍" tabindex="-1"><a class="header-anchor" href="#_1-hpa-介绍" aria-hidden="true">#</a> <strong>1.HPA 介绍</strong></h2><p>Horizontal Pod Autoscaler 根据观察到的 CPU 利用率（或者，在自定义指标 支持下，根据其他一些应用程序提供的指标）自动扩展复制控制器、部署、副本集或有状态集中的 Pod 数量。请注意，Horizontal Pod Autoscaling 不适用于无法缩放的对象，例如 DaemonSet。</p><p>Horizontal Pod Autoscaler 实现为 Kubernetes API 资源和控制器。资源决定了控制器的行为。控制器会定期调整复制控制器或部署中的副本数量，以将观察到的指标（例如平均 CPU 利用率、平均内存利用率或任何其他自定义指标）与用户指定的目标相匹配。</p><p>K8s通过HPA，基于获取到的metrics(CPU utilization, custom metrics) value，对rc, deployment管理的 pods 进行自动伸缩。</p><p>HPA Controller 周期性(默认每 30s 一次，可通过 kube-controller-manager 的 flag--horizontal-pod-autoscaler-sync-period 进行设置)的调整对应的 rc,Deployment 中的 replicas 数量，使得指定的 metrics value 能匹配用户指定的 target utilization value。</p><p>在每个 HPA Controller 的处理周期中，kube-controller-manager 都去查询 HPA 中定义的 metrics 的 utilization。查询方式根据 metric 类型不同而不同：</p><ul><li><p>如果 metric type 是 resource metrics，则通过 resource metrics API 查询。</p></li><li><p>如果 metric type 属于 custom metrics，则通过 custom metrics API 查询。</p></li></ul><h2 id="_2-部署-metrics-server" tabindex="-1"><a class="header-anchor" href="#_2-部署-metrics-server" aria-hidden="true">#</a> <strong>2.部署 metrics-server</strong></h2><blockquote><p>Project Add: https://github.com/kubernetes-sigs/metrics-server</p></blockquote><p>** 下载部署清单文件**</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.6/components.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>修改 components.yaml 文件</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 修改了镜像地址为：scofield/metrics-server:v0.3.6</span>
<span class="token comment"># 修改了 metrics-server 启动参数 args</span>

<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> metrics<span class="token punctuation">-</span>server
  <span class="token key atrule">image</span><span class="token punctuation">:</span> scofield/metrics<span class="token punctuation">-</span>server<span class="token punctuation">:</span>v0.3.6
  <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent
  <span class="token key atrule">args</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>cert<span class="token punctuation">-</span>dir=/tmp
  <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>secure<span class="token punctuation">-</span>port=4443
  <span class="token punctuation">-</span> /metrics<span class="token punctuation">-</span>server
  <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>kubelet<span class="token punctuation">-</span>insecure<span class="token punctuation">-</span>tls
  <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>kubelet<span class="token punctuation">-</span>preferred<span class="token punctuation">-</span>address<span class="token punctuation">-</span>types=InternalIP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>能获取要 top 信息视为成功</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubectl top nodes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-通过-cpu、内存监控指标实现应用自动弹性" tabindex="-1"><a class="header-anchor" href="#_3-通过-cpu、内存监控指标实现应用自动弹性" aria-hidden="true">#</a> <strong>3.通过 CPU、内存监控指标实现应用自动弹性</strong></h2><h3 id="先决条件" tabindex="-1"><a class="header-anchor" href="#先决条件" aria-hidden="true">#</a> <strong>先决条件</strong></h3><p>在 rs/rc/deployment 配置下必须有下面的配置，与 image 相同位置</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">resources</span><span class="token punctuation">:</span>
 <span class="token key atrule">requests</span><span class="token punctuation">:</span>
	<span class="token key atrule">cpu</span><span class="token punctuation">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="手动配置" tabindex="-1"><a class="header-anchor" href="#手动配置" aria-hidden="true">#</a> 手动配置</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubectl autoscale deployment wordpress --min=1 --max=40 --cpu-percent=35
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="yaml-创建" tabindex="-1"><a class="header-anchor" href="#yaml-创建" aria-hidden="true">#</a> Yaml 创建</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> autoscaling/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> HorizontalPodAutoscaler
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
 <span class="token key atrule">name</span><span class="token punctuation">:</span> ngx<span class="token punctuation">-</span>hpa
 <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
 <span class="token key atrule">scaleTargetRef</span><span class="token punctuation">:</span>
 	<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> extensions/v1beta1
 	<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
 	<span class="token key atrule">name</span><span class="token punctuation">:</span> ngx
 <span class="token key atrule">minReplicas</span><span class="token punctuation">:</span> <span class="token number">1</span>
 <span class="token key atrule">maxReplicas</span><span class="token punctuation">:</span> <span class="token number">10</span>
 <span class="token key atrule">targetCPUUtilizationPercentage</span><span class="token punctuation">:</span> <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubectl get hpa
kubectl get pod -w
Watch -n 1 kubectl get pod
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),l=[i];function c(p,r){return s(),a("div",null,l)}const u=n(t,[["render",c],["__file","k8s-13-HorizontalPodAutoscaler.html.vue"]]);export{u as default};
